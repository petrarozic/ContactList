@using Contacts.ViewModels
@model HomeViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/content/style.css" />
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <title>Index</title>
</head>
<body>
    <div class="header flex-container-row">
        <a asp-controller="Home" asp-action="Index" class="title">Contacts</a>
        <a asp-controller="Contact" asp-action="NewContact" class="actionButton">Add new contact</a>
    </div>
    <div class="content">
        @if (!Model.Contacts.Any())
        {
            <div class="errorMessage">
                No contacts to display
            </div>
        }
        else
        {
            <form asp-action="Filter" method="post" id="filterForm">
                <div>
                    <label>Search by:</label>
                </div>
                <div>
                    <input id="searchByFirstName" placeholder="First name" />
                    <input id="searchByLastName" placeholder="Last name" />
                    <input id="searchByCity" placeholder="City" />
                    <input id="searchByPhoneNumber" placeholder="Phone number" />
                </div>
                <div class="buttons">
                    <input type="submit" value="Filter contacts" />
                </div>
            </form>
            <table class="table-striped" id="contactTable">
                <thead>
                    <tr>
                        <th class="sortable" style="width: 20%" id="1">@Html.DisplayNameFor(model => model.Contacts.First().FirstName)</th>
                        <th class="sortable" style="width: 20%" id="2">@Html.DisplayNameFor(model => model.Contacts.First().LastName)</th>
                        <th class="sortable" style="width: 20%" id="3">@Html.DisplayNameFor(model => model.Contacts.First().City)</th>
                        <th style="width: auto">@Html.DisplayNameFor(model => model.Contacts.First().PhoneNumbersString)</th>
                        <th style="width: 10%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var c in Model.Contacts)
                    {
                        <tr>
                            <td>@c.FirstName</td>
                            <td>@c.LastName</td>
                            <td>@c.City</td>
                            <td>@c.PhoneNumbersString</td>
                            <td><img src="~/images/viewIcon.png" class="icon viewContact" alt="View contact" id="@c.ContactId"></td>
                        </tr>
                    }
                </tbody>
            </table>
            <nav aria-label="Page navigation example">
                <ul class="pagination"></ul>
            </nav>
            <form asp-action="Filter" method="post">
                <div class="recordsPerPage">
                    <label asp-for="ContactsPerPage">Results per page:</label>
                    <select asp-for="ContactsPerPage" id="recordsPerPage">
                        <option asp-for="ContactsPerPage" value="5">
                            5
                        </option>
                        <option asp-for="ContactsPerPage" value="10">
                            10
                        </option>
                        <option asp-for="ContactsPerPage" value="15">
                            15
                        </option>
                    </select>
                </div>
            </form>
        }
    </div>
</body>
</html>
<script>
    $(document).ready(function () {
        $(".viewContact").on("click", function (e) {
            viewContact(e.target.id);
        });

        setPagination(@Model.MinPage, @Model.MaxPage, @Model.CurrentPage);

        $("#recordsPerPage").on("change", function (e) {
            //console.log("recordsPerPage - change");
            submitFilterForm();
            e.preventDefault();
        });

        $(".sortable").on("click", function (e) {
            sortTable(e);
        });

        $("#filterForm").on("submit", function (e) {
            //console.log("filterForm - submit");
            submitFilterForm();
            e.preventDefault();
        });
    });

    function viewContact(contactId) {
        window.location.href = "/Contact/" + contactId;
    }

    function setPagination(minPage, maxPage, currentPage) {
        $(".pagination").empty();
        if (maxPage == -1) return;
        var previous = $("<li>");
        previous.text("Previous");
        if (currentPage != minPage) {
            previous.click(function () {
                changePage(currentPage - 1);
            });
            previous.attr({ class: "page-item page-link" });
        } else {
            previous.attr({ class: "page-item page-link disabled" });
        }
        $(".pagination").append(previous);

        for (var i = minPage; i <= maxPage; i++) {
            var page = $("<li>");
            page.attr({ id: i });
            page.text(i + 1);
            page.click(function (e) {
                changePage(e.target.id);
            });
            if (i == currentPage) page.attr({ class: "page-item page-link active" });
            else page.attr({ class: "page-item page-link" });
            $(".pagination").append(page);
        }

        var next = $("<li>");
        next.text("Next");
        if (currentPage != maxPage) {
            next.click(function () {
                changePage(currentPage + 1);
            });
            next.attr({ class: "page-item page-link" });
        } else {
            next.attr({ class: "page-item page-link disabled" });
        }
        $(".pagination").append(next);
        
    }

    var sortBy = 1;
    function changePage(goToPage) {
        var param = {
            goToPage: goToPage,
            recordsPerPage: $("#recordsPerPage").val(), 
            sortBy: sortBy,
            searchByFirstName: $("#searchByFirstName").val(),
            searchByLastName: $("#searchByLastName").val(),
            searchByCity: $("#searchByCity").val(),
            searchByPhoneNumber: $("#searchByPhoneNumber").val()
        };
        getRecords(param);
    }

    function submitFilterForm() {
        //console.log("submitFilterForm");
        var param = {
            goToPage: 0,
            recordsPerPage: $("#recordsPerPage").val(),
            sortBy: sortBy, 
            searchByFirstName: $("#searchByFirstName").val(),
            searchByLastName: $("#searchByLastName").val(),
            searchByCity: $("#searchByCity").val(),
            searchByPhoneNumber: $("#searchByPhoneNumber").val()
        };
        getRecords(param);
    }

    function sortTable(e) {
        //console.log("sortTable - sortBy: " + e.target.id);
        sortBy = e.target.id;

        var param = {
            goToPage: 0,
            recordsPerPage: $("#recordsPerPage").val(),
            sortBy: sortBy,
            searchByFirstName: $("#searchByFirstName").val(),
            searchByLastName: $("#searchByLastName").val(),
            searchByCity: $("#searchByCity").val(),
            searchByPhoneNumber: $("#searchByPhoneNumber").val()
        };

        if (sortBy > 3) e.target.id = parseInt(e.target.id) - 3;
        else if (sortBy < 4) e.target.id = parseInt(e.target.id) + 3;
        getRecords(param);
    }

    function getRecords(param) {
        //console.log("getRecords");
        $.ajax(
            {
                type: "GET",
                url: "/Home/Filter",
                dataType: "json",
                data: param,
                success: function (data) {
                    //console.log("success - submitSearchForm");
                    $("tbody").empty();
                    if (data.contacts.length == 0) {
                        var trError = $("<tr>");
                        var tdError = $("<td>");
                        tdError.attr({ colspan: "5" });
                        tdError.attr({ class: "errorMessage" });
                        tdError.text("No contacts to display");
                        trError.append(tdError);
                        $("tbody").append(trError);
                        setPagination(data.minPage, data.maxPage, data.currentPage);
                    } else {
                        for (var x = 0; x < data.contacts.length; x++) {
                            var $img = $('<img>');
                            $img.attr({ src: "/images/viewIcon.png" });
                            $img.attr({ class: "icon viewContact" });
                            $img.attr({ alt: "View contact" });
                            $img.attr({ id: data.contacts[x].contactId });
                            $img.click(function (e) {
                                viewContact(e.target.id);
                            });

                            var $tr = $('<tr>').append(
                                $('<td>').text(data.contacts[x].firstName),
                                $('<td>').text(data.contacts[x].lastName),
                                $('<td>').text(data.contacts[x].city),
                                $('<td>').text(data.contacts[x].phoneNumbersString),
                                $('<td>').append($img)
                            );
                            $("tbody").append($tr);
                        }

                        setPagination(data.minPage, data.maxPage, data.currentPage);
                    }
                },
                failure: function (data) {
                    alert(data.responseText);
                    console.log("failure");
                }, //End of AJAX failure function
                error: function (data) {
                    //debugger
                    alert(data.responseText);
                    console.log("error");
                } //End of AJAX error function
            });
    }
</script>
