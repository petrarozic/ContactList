@using Contacts.ViewModels
@model ContactViewModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/content/StyleSheet.css" />
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <title>Index</title>
</head>
<body>
    <div class="header flex-container-row">
        <a asp-controller="Home" asp-action="Index" class="title">Contacts</a>
        <a asp-controller="Contact" asp-action="NewContact" class="actionButton">Add new contact</a>
    </div>
    <div class="content">
        @if (Model.ErrorMessage != null)
        {
            <div class="errorMessage">
                @Model.ErrorMessage
            </div>

        }
        else
        {
            <div style="width: 70%">
                <div style="margin-bottom: 1em;" class="flex-container-row">
                    <img class="contactImg" style="margin-right: 1.5em;" src='@Url.Action("ShowProfilePhoto", "Contact", new { id = Model.Contact.ProfilePhotoId })' />
                    <div>
                        <div>
                            <label>@Html.DisplayNameFor(model => model.Contact.FirstName)</label>
                            <label class="textBox">@Model.Contact.FirstName</label>
                        </div>
                        <div>
                            <label>@Html.DisplayNameFor(model => model.Contact.LastName)</label>
                            <label class="textBox">@Model.Contact.LastName</label>
                        </div>
                        <div>
                            <label>@Html.DisplayNameFor(model => model.Contact.City)</label>
                            <label class="textBox">@Model.Contact.City</label>
                        </div>
                        <div>
                            <label>@Html.DisplayNameFor(model => model.Contact.Note)</label>
                            <label class="textBox">@Model.Contact.Note</label>
                        </div>
                    </div>
                </div>
                <div>
                    <label>@Html.DisplayNameFor(model => model.Contact.PhoneNumbers)</label>
                    @if (!Model.Contact.PhoneNumbers.Any())
                    {
                        <label class="textBox">No phone numbers added</label>
                    }
                    else
                    {
                        <table class="table-striped" style="width: 90%">
                            <tbody>
                                @foreach (var phoneNum in Model.Contact.PhoneNumbers)
                                {
                                    <tr>
                                        <td>@phoneNum.Type</td>
                                        <td>@phoneNum.Number</td>
                                        <td>@phoneNum.Note</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </div>
        }
        </div>
</body>
</html>

